modal-user(spat-animation='bottom')
  div.f.flex-column.bg-white.h-full(ref='modal')
    module-header(title='プロフィール編集')
    div.container
      form.px50.py32.text-center(onsubmit='{submit}')
        div.s-full.s128.circle.overflow-hidden.mb16.mxa.relative
          input.opacity-0.block.s-full.absolute.trbl0(type='file', onchange='{changeImage}')
          img.object-fit-cover.s-full.block(src='{getImage()}')
        input.border.p8.rounded-4.w-full.mb32(ref='display_name', placeholder='名前', required)
        textarea.border.p8.rounded-4.w-full.mb32(ref='profile', placeholder='プロフィール', required)
        button.button.primary 更新
    div.homebar.bg-white.flex-fixed
  
  style(type='less').
    :scope {
      display: block;
    }

  script.
    this.on('mount', async () => {
      this.user = await app.store.users.get();
      this.refs.display_name.value = this.user.data ? (this.user.data.display_name || '') : '';
      this.refs.profile.value = this.user.data ? (this.user.data.profile || '') : '';
      this.update();
    });

    this.getImage = () => {
      if (this.base64) return this.base64;
      else if (this.user.data && this.user.data.image.url !== '' ) return this.user.data.image.url;
      else return "/static/images/no_image.png";
    };

    this.submit = async (e) => {
      e.preventDefault();

      if (this.flie) {
        var url = await app.utils.uploadUserImageToStorage(this.file);
      }
      else var url = '';

      await this.user.doc.ref.update({
        display_name: this.refs.display_name.value,
        profile: this.refs.profile.value,
        email: this.opts.user.email,
        image: {url: url.url || ''},
        updated_at: Date.now(),
      });

      await this.user.doc.ref.getWithRelation({cache:false});
      riot.update();

      spat.modal.alert('登録しました');

      this.close();
    };

    this.changeImage = async(e) => {
      if (!e.target.value || !e.target.files[0]) return;
      this.file = e.target.files[0];
      this.base64 = await app.utils.fileToBase64(this.file);
      if (!this.base64) return;
      this.update();
      e.target.value = '';
    };
