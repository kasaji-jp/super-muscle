modal-new-edit(spat-animation='bottom')
  form.s-full.bg-maingray.f.flex-column(ref='modal', onsubmit='{add}')
    div.w-full(data-is='module-header', title='リスト編集', close='{close}')
    div.s-full.px30.py30.overflow-y-scroll
      div.fs28.bold.mb20 TITLE:
      input.input.w-full.mb40.bg-white(ref='title', placeholder='イカしたタイトルをつけよう', required)

      div.w-full(if='{opts.type === "training"}')
        div.fs28.bold.mb20 BODY PARTS:
        select.w-full.bg-softgray.py10.px20.fs16.rounded-4.mb40(ref='parts', required)
          option(value='normal', hidden, selected) 部位を選択してください
          option(each='{part in dummies}') {part}
        div.mb20.fs28.bold THUMBNAILS
        input.mb40(type='file', accept='image/*')

      div.fs28.bold.mb20 DESCRIPTION:
      textarea.input.w-full.mb40.bg-white.h200(ref='description', placeholder='友達も思わずマネしたくなる様な説明を書いてみよう')

      div.fs28.bold.mb20 MENU:
      div.p20.border.rounded-10.bw8.mb20(if='{opts.type === "list" && trainings}')
        div.f.fb.w-full(each='{training in trainings}')
          img.s80.mr10(src='{training.data.image.url}')
          div.w-full.border-bottom.f.fb.flex-between.pb8
            div.w-full
              div.fs14.mb8 {training.data.name}

      div.w-full.py10(onclick='{openSelectModal}', if='{!trainings}')
        div.mxa.w200.f.fh.bg-sub.rounded-full.cursor-pointer
          span.text-white.bold.py20 トレーニングを選ぶ

      button.w-full.py10(type='submit', if='{opts.type === "training" || trainings}')
        div.mxa.w200.f.fh.bg-main.rounded-full.cursor-pointer
          span.text-white.bold.py20 決定


  script.
    this.dummies = [
      '腕',
      '肩',
      '腹筋',
      '脚',
    ];

    this.openSelectModal = () => {
      if (this.refs.title.value === '') {
        spat.modal.alert('タイトルを入力してください')
        return;
      }
      var modal = spat.modal.open('modal-menu-select');
      modal.on('add', (items) => {
        this.trainings = items;
        modal.close();
        this.update();
      });
    };
    

    this.add = async(e) => {
      e.preventDefault();
      if (this.opts.type === 'list' && !this.trainings) {
        spat.modal.alert('トレーニングを選択してください');
        return;
      }
      this.item = {};
      if (this.opts.type === 'list') {
        this.trainings = this.trainings.map(training => {
          return {id: training.id, name: training.data.name};
        });
        this.item.data = {
          name: this.refs.title.value,
          description: this.refs.description.value,
          trainings: this.trainings,
        };
        var docRef = await app.store.lists.post(this.item);
        app.routeful.go(`/list${docRef.id}`);
      } else {

      }
      //- this.item.data
    };
